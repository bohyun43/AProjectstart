
UnrealTargetPlatform
----------------------------------------------------------------------
	: Win32
	: Win64
	: PS4
	: XBoxOne

UnrealTargetConfiguration
----------------------------------------------------------------------
[https://docs.unrealengine.com/ko-KR/Programming/Development/BuildConfigurations]

	: Debug > 모든 프로젝트의 바이너리가 디버깅 심볼을 가지도록 합니다.
	: DebugGame > 게임 프로젝트의 바이너리만 디버깅 심볼을 가지도록 합니다.
	: Development > 일반적인 프로젝트에서의 Release 환경설정과 같습니다.
	: Shipping > 최상의 성능을 가진 설정입니다.
	: Test > Shipping 에서 콘솔, 통계, 프로우파일링을 추가한 것입니다.


Build.cs 디버깅
----------------------------------------------------------------------
	1.[UnrealBuildTool] 프로젝트를 시작 프로젝트로 설정
	2. 디버깅용 명령줄 파라미터를 이렇게 설정합니다 :
		ex > myGameTarget[솔루션 플랫폼][솔루션 구성]
		ex > projectNameEditor Win64 DebugGame "c:/xxx/projectName.uproject"
	3. 작업 디렉터리를 다음에 대한 로컬 경로로 설정합니다 : [Your UE4 Directory] / Engine / Source /
	4. 평소처럼 컴파일하고 디버깅합니다.


Build.cs 구성
----------------------------------------------------------------------
[http://api.unrealengine.com/KOR/Programming/UnrealBuildSystem/ModuleFiles/] 

-기분 경로 얻기 >> [Source] 폴더 위치
	. string projectPath = ModuleDirectory; 

-사용할 언리얼 공용 모듈 추가
	. PublicDependencyModuleNamess.AddRange(...) 
	. PublicDependencyModuleNamess.Add(...)

- 사용할 언리얼 개별 모듈 추가
	. PrivateDependencyModuleNames.AddRange(...)  
	. PrivateDependencyModuleNames.Add(...)

- 런타임에 이 모듈이 필요로 할수 있는 부가 모듈 등록
	. DynamicallyLoadModuleNames.Add(...) 

- 시스템 / 라이브러리 경로 목록 추가
	. PublicSystemIncludePaths.Add(projectPath + "/Map"); 
	
- 라이브러리 경로 등록
	string kThirdPartyPath = System.IO.Path.GetFullPath(projectPath + "/../../ThirdParty");
	PublicLibraryPaths.Add(kThirdPartyPath + "/Lua/bin/x64/");

- 라이브러리 등록
	string kThirdPartyPath	= System.IO.Path.GetFullPath(projectPath + "/../../ThirdParty");
	PublicAdditionalLibraries.Add(kThirdPartyPath + "/Lua/bin/x64/LuaRelease.lib");
